<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kzm.blog.mapper.article.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.kzm.blog.common.entity.article.ArticleEntity">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="description" column="description"></result>
        <result property="authorId" column="author_id"></result>
        <result property="content" column="content"></result>
        <result property="contentFormat" column="content_format"></result>
        <result property="readNum" column="read_num"></result>
        <result property="commentNum" column="comment_num"></result>
        <result property="likeNum" column="like_num"></result>
        <result property="publish" column="publish"></result>
        <result property="createTime" column="create_time"></result>
        <result property="updateTime" column="update_time"></result>
    </resultMap>
    <!--  <resultMap id="ArticleShortMap" type="com.kzm.blog.common.entity.article.vo.ArticleShortVo" extends="BaseResultMap">
          <result property="nickname" column="nickname"></result>
          <result property="avatar" column="avatar"></result>
          <collection property="categorys" javaType="com.kzm.blog.common.entity.category.vo.CategoryShortVo">
              <id property="id" column="cid"></id>
              <result property="categoryName" column="category_name"></result>
          </collection>
      </resultMap>-->
    <sql id="Base_Column_List">
        id,title,description,author_id,content,content_format,
        read_num,comment_num,like_num,publish,catebgory_id,create_time,update_time </sql>

    <update id="addComments">
        update article set  comment_num=comment_num+1 where id=#{id}
    </update>
    <update id="updateReadNum">
        update article set  read_num=read_num+1 where id=#{id}
    </update>

    <select id="selectShortByTag" resultType="com.kzm.blog.common.entity.article.vo.ArticleShortVo">
        select
        distinct a.id,
        a.title,
        a.description,
        a.read_num,
        a.comment_num,
        a.author_id,
        a.update_time,
        u.avatar,
        u.nickname
        from article a inner join sys_user u on a.author_id=u.id
        inner join article_category ac on a.id=ac.article_id
        <where>
            a.publish=1
            <if test="articleShortBo.id==0">
            </if>
            <if test="articleShortBo.id!=0 and articleShortBo.id !=-1">
              and   ac.category_id=#{articleShortBo.id}
            </if>
        </where>
        order by update_time desc
    </select>

    <select id="selectCountLikeByUId" resultType="java.lang.Integer">
          select sum(like_num) from  article where author_id=#{user_id}
    </select>
    <select id="selectCategory" resultType="com.kzm.blog.common.entity.category.vo.CategoryShortVo">
        select
      c.id,
      c.category_name,
      c.parent_id
      from  category c inner join article_category  ac on c.id=ac.category_id
      where  ac.article_id=#{id} and c.parent_id=-1
    </select>
    <select id="selectTags" resultType="com.kzm.blog.common.entity.category.vo.CategoryShortVo">
        select
      c.id,
      c.category_name,
      c.parent_id
      from  category c inner join article_category  ac on c.id=ac.category_id
      where  ac.article_id=#{id}  and c.parent_id!=-1
    </select>
    <select id="getWordCount" resultType="com.kzm.blog.common.entity.User.vo.UserFerralVo">
        select
        author_id as id,
        sum(length(content)) as TotalWord
        from article
        <where>
            author_id in
            <foreach collection="ids" open="(" separator="," close=")" index="index" item="item">
                #{item}
            </foreach>
            group by author_id
        </where>
    </select>
    <select id="getRecentArticle" resultType="com.kzm.blog.common.entity.log.vo.Recent">
     select
      date_format(l.update_time, '%m-%d') days,
      count(1) as count
      from
      (select
      *
      from
      article
      where
      date_sub(curdate(), interval 7 day) &lt;= date(update_time)
      ) as l
      group by days
    </select>
    <select id="selectShortByTagOrNickname" resultType="com.kzm.blog.common.entity.article.vo.ArticleAllVo">
        select
        distinct a.id,
        a.title,
        a.publish,
        a.recommend,
        a.content,
        a.description,
        a.read_num,
        a.comment_num,
        a.update_time,
        u.nickname
        from article a inner join sys_user u on a.author_id=u.id
        inner join article_category ac on a.id=ac.article_id
        <where>
            <if test="articleShortBo.id==0 or articleShortBo.id==null">
            </if>
            <if test="articleShortBo.id!=0 and articleShortBo.id !=-1 and articleShortBo.id!=null">
                ac.category_id=#{articleShortBo.id}
            </if>
            <if test="articleShortBo.nickname!=null and articleShortBo.nickname !=''">
                and u.nickname like concat('%',#{articleShortBo.nickname},'%')
            </if>
        </where>
    </select>
    <select id="selectArticleWord" resultType="java.lang.Integer">
        SELECT
        SUM(length(content))
        FROM
         article
         WHERE author_id=#{authorId}
    </select>
    <select id="selectHotRecent" resultType="com.kzm.blog.common.entity.article.vo.ArticleRecentVo">
         select
         id,
         title,
         description as summary,
         read_num,
         comment_num
         from article
         where author_id=#{userId}
         and publish=1
          and date_sub(curdate(),interval 30 day) &lt;= date(update_time)
         order by read_num
    </select>
    <select id="getTimeLine" resultType="com.kzm.blog.common.entity.article.vo.ArticleShortVo">
        select
        id,
        title,
        description,
        update_time
        from article
        where author_id=#{id}
        and publish=1
        order by update_time desc
    </select>
</mapper>